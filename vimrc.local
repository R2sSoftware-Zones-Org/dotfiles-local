set ignorecase

" Don't lose buffer history on switch (i.e., <c-^>)
set hidden

" Go from insert back to normal with 'jk'
imap jk <Esc>

" Inserts the path of the currently edited file into a command
cmap <C-P> <C-R>=expand("%:p:h") . "/" <CR>

" Quick editing of common dotfiles
map <Leader>VV :tabedit $MYVIMRC<CR>
map <Leader>Vv :tabedit ~/.vimrc.local<CR>
map <Leader>VB :tabedit ~/.vimrc.bundles<CR>
map <Leader>Vb :tabedit ~/.vimrc.bundles.local<CR>

" The superior colorscheme
colorscheme molokai

" Even quicker window movement
nmap H <c-w>h
nmap J <c-w>j
nmap K <c-w>k
nmap L <c-w>l

" Use Q for formatting paragraphs
vmap Q gq
nmap Q gqap

" Speed up keymaps
set timeoutlen=500
set ttimeoutlen=10

" Folding
set foldnestmax=3 " Deepest fold level
set nofoldenable  " Don't fold by default
set foldlevel=99  " Don't fold everything when we do enable folding

" Use 'gp' to select the just-pasted block in visual line mode
nnoremap gp V`]

" Quick macro to strip trailing whitespace
let @w = ':%s/\v\s+$//g'

" Use Shift+P while in visual mode to replace the selection without overwriting
" the default register
vmap P p :call setreg('"', getreg('0')) <CR>

" On my system, speeds up initial load of Ruby files
" See https://github.com/vim-ruby/vim-ruby/issues/33
let g:ruby_path=$PATH

" Delete comment character when joining commented lines
if v:version > 703 || v:version == 703 && has("patch541")
  set formatoptions+=j
endif

" Reload files changed outside Vim
set autoread

" Don't complete from included files: http://git.io/jwXC
set complete-=i

augroup vimrcLocalEx
  " Source vimrc after writing it (or .local version)
  autocmd! BufWritePost *vimrc,*vimrc.local source $MYVIMRC
  autocmd! BufWritePost *vimrc.bundles,*vimrc.bundles.local source $MYVIMRC

  " Special handling for Go files
  au BufNewFile,BufRead *.go setlocal noet nolist ts=4 sw=4 sts=4
augroup END
