if &compatible
  set nocompatible
end

filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" Let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

" thoughtbot
" Define bundles via Github repos
Plugin 'christoomey/vim-run-interactive'
Plugin 'croaky/vim-colors-github'
Plugin 'kchmck/vim-coffee-script'
Plugin 'kien/ctrlp.vim'
"Plugin 'pbrisbin/vim-mkdir'
" Plugin 'scrooloose/syntastic'  " FIXME: So slow opening/switching between files
Plugin 'slim-template/vim-slim'
Plugin 'thoughtbot/vim-rspec'
Plugin 'tpope/vim-bundler'
Plugin 'tpope/vim-endwise'
Plugin 'tpope/vim-eunuch'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-rails'
Plugin 'tpope/vim-surround'
Plugin 'vim-ruby/vim-ruby'
Plugin 'vim-scripts/ctags.vim'
Plugin 'vim-scripts/matchit.zip'
"Plugin 'vim-scripts/tComment'

" rspeicher
Plugin 'AndrewRadev/splitjoin.vim'
Plugin 'AndrewRadev/switch.vim'
Plugin 'Tabular'
Plugin 'bling/vim-airline'
"Plugin 'jc00ke/vim-tomdoc'
"Plugin 'jnwhiteh/vim-golang'
Plugin 'kana/vim-textobj-user'
"Plugin 'nelstrom/vim-textobj-rubyblock'
"Plugin 'nginx.vim'
Plugin 'rking/ag.vim'
Plugin 'scrooloose/nerdtree'
Plugin 'tomasr/molokai'
Plugin 'tpope/vim-commentary'
"Plugin 'tpope/vim-cucumber'
Plugin 'tpope/vim-dispatch'
"Plugin 'tpope/vim-git'
"Plugin 'tpope/vim-haml'
"Plugin 'tpope/vim-markdown'
Plugin 'tpope/vim-projectionist'
Plugin 'tpope/vim-rake'
Plugin 'tpope/vim-repeat'
"Plugin 'tpope/vim-speeddating'
Plugin 'tpope/vim-unimpaired'

" kien/ctrlp.vim
    " let g:ctrlp_custom_ignore = '\.git$\|\.hg$\|\.svn$'
    " let g:ctrlp_dotfiles = 0
    " let g:ctrlp_max_depth = 15
    " let g:ctrlp_max_files = 5000
    let g:ctrlp_open_multiple_files = 't'
    " let g:ctrlp_working_path_mode = 2

    " if executable('ag')
    "   let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
    "   let g:ctrlp_use_caching = 1
    " endif

    map <Leader>b :CtrlPBuffer<CR>
    map <Leader>g :CtrlPTag<CR>

    " Start CtrlP scoped to the current file's directory
    map <Leader>e :CtrlPCurFile<cr>

    " CtrlP scoped to various Rails directories
    autocmd User Rails map <Leader>c :CtrlP app/controllers/<cr>
    autocmd User Rails map <Leader>h :CtrlP app/helpers/<cr>
    autocmd User Rails map <Leader>j :CtrlP app/assets/javascripts/<cr>
    autocmd User Rails map <Leader>S :CtrlP app/assets/stylesheets/<cr>
    autocmd User Rails map <Leader>m :CtrlP app/models/<cr>
    autocmd User Rails map <Leader>u :CtrlP spec/models/<cr>
    autocmd User Rails map <Leader>v :CtrlP app/views/<cr>

" thoughtbot/vim-rspec
    " let g:rspec_command = "compiler rspec | set makeprg=zeus | Make rspec {spec}"

" AndrewRadev/switch.vim
    nnoremap - :Switch<cr>

" Tabular
    map <Leader>a= :Tabularize /=<CR>
    map <Leader>a> :Tabularize /=><CR>
    map <Leader>a: :Tabularize properties<CR>
    map <Leader>at :Tabularize table<CR>
    map <Leader>a# :Tabularize rdoc<CR>

    vmap <Leader>a= :Tabularize /=<CR>gv
    vmap <Leader>a> :Tabularize /=><CR>gv
    vmap <Leader>a: :Tabularize properties<CR>gv
    vmap <Leader>at :Tabularize table<CR>gv
    vmap <Leader>a# :Tabularize rdoc<CR>gv

" tpope/vim-commentary
    nmap <Leader>cc gcc
    vmap <Leader>cc gc

" scrooloose/nerdtree
    " let g:NERDTreeIgnore      = ['\.rbc$', '\~$', '.DS_Store$']
    let g:NERDTreeChDirMode   = 2
    let g:NERDTreeQuitOnOpen  = 1
    let g:NERDTreeMinimalUI   = 1
    let g:NERDTreeDirArrows   = 0
    let g:NERDTreeHijackNetrw = 1
    map <Leader>/ :NERDTreeFind<CR>

    autocmd WinEnter * call s:CloseIfOnlyNerdTreeLeft()

    " Close all open buffers on entering a window if the only
    " buffer that's left is the NERDTree buffer
    function! s:CloseIfOnlyNerdTreeLeft()
      if exists("t:NERDTreeBufName")
        if bufwinnr(t:NERDTreeBufName) != -1
          if winnr("$") == 1
            q
          endif
        endif
      endif
    endfunction

"runtime macros/matchit.vim
" rspeicher END

if filereadable(expand("~/.vimrc.bundles.local"))
  source ~/.vimrc.bundles.local
endif

call vundle#end()
filetype on
