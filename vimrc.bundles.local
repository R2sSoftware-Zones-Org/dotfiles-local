Plugin 'AndrewRadev/splitjoin.vim'
Plugin 'AndrewRadev/switch.vim'
Plugin 'Keithbsmiley/swift.vim'
Plugin 'bling/vim-airline'
Plugin 'gabebw/vim-spec-runner'
"Plugin 'jc00ke/vim-tomdoc'
"Plugin 'jnwhiteh/vim-golang'
Plugin 'junegunn/vim-easy-align'
Plugin 'kana/vim-textobj-user'
"Plugin 'nelstrom/vim-textobj-rubyblock'
"Plugin 'nginx.vim'
Plugin 'rking/ag.vim'
Plugin 'scrooloose/nerdtree'
Plugin 'tomasr/molokai'
Plugin 'tpope/vim-commentary'
Plugin 'tpope/vim-dispatch'
"Plugin 'tpope/vim-git'
"Plugin 'tpope/vim-haml'
"Plugin 'tpope/vim-markdown'
Plugin 'tpope/vim-projectionist'
Plugin 'tpope/vim-ragtag'
Plugin 'tpope/vim-rake'
Plugin 'tpope/vim-unimpaired'
Plugin 'tsigo/vim-dependencywtf'

" gabebw/vim-spec-runner
    let g:spec_runner_dispatcher = 'Dispatch {command}'

" junegunn/vim-easy-align
    vmap <Enter> <Plug>(EasyAlign)
    nmap <Leader>a <Plug>(EasyAlign)

" kien/ctrlp.vim
    " let g:ctrlp_custom_ignore = '\.git$\|\.hg$\|\.svn$'
    " let g:ctrlp_dotfiles = 0
    " let g:ctrlp_max_depth = 15
    " let g:ctrlp_max_files = 5000
    let g:ctrlp_open_multiple_files = 't'
    " let g:ctrlp_working_path_mode = 2

    map <Leader>b :CtrlPBuffer<CR>
    map <Leader>g :CtrlPTag<CR>

    " Start CtrlP scoped to the current file's directory
    map <Leader>e :CtrlPCurFile<cr>

    " CtrlP scoped to various Rails directories
    autocmd User Rails map <Leader>c :CtrlP app/controllers/<cr>
    autocmd User Rails map <Leader>h :CtrlP app/helpers/<cr>
    autocmd User Rails map <Leader>j :CtrlP app/assets/javascripts/<cr>
    autocmd User Rails map <Leader>S :CtrlP app/assets/stylesheets/<cr>
    autocmd User Rails map <Leader>m :CtrlP app/models/<cr>
    autocmd User Rails map <Leader>u :CtrlP spec/models/<cr>
    autocmd User Rails map <Leader>v :CtrlP app/views/<cr>

" AndrewRadev/switch.vim
    nnoremap - :Switch<cr>

" scrooloose/nerdtree
    " let g:NERDTreeIgnore      = ['\.rbc$', '\~$', '.DS_Store$']
    let g:NERDTreeChDirMode   = 2
    let g:NERDTreeQuitOnOpen  = 1
    let g:NERDTreeMinimalUI   = 1
    let g:NERDTreeDirArrows   = 0
    let g:NERDTreeHijackNetrw = 1
    map <Leader>/ :NERDTreeFind<CR>

    autocmd WinEnter * call s:CloseIfOnlyNerdTreeLeft()

    " Close all open buffers on entering a window if the only
    " buffer that's left is the NERDTree buffer
    function! s:CloseIfOnlyNerdTreeLeft()
      if exists("t:NERDTreeBufName")
        if bufwinnr(t:NERDTreeBufName) != -1
          if winnr("$") == 1
            q
          endif
        endif
      endif
    endfunction
